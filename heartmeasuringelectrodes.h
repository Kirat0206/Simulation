#ifndef HEARTMEASURINGELECTRODES_H
#define HEARTMEASURINGELECTRODES_H

using namespace std;
#include <iostream>

class HeartMeasuringElectrodes
{
public:
    HeartMeasuringElectrodes();

    float getNextCoherentScore();
    float getNextCoherentBPM();

    float getNextMidcoherentScore();
    float getNextMidcoherentBPM();

    float getNextIncoherentScore();
    float getNextIncoherentBPM();

    void reset();

    int coherentLoc = 0;
    int midcoherentLoc = 0;
    int incoherentLoc = 0;

    int coherentBPM[64] = {70, 75, 79, 80, 79, 75, 70, 65, 61, 60, 61, 65, 70, 75, 79, 80, 79, 75, 70, 65, 61, 60, 61, 65, 70, 75, 79, 80, 79, 75, 70, 65, 61, 60, 61, 70, 75, 79, 80, 79, 75, 70, 65, 61, 60, 61, 65, 70, 75, 79, 80, 79, 75, 70, 65, 61, 60, 61, 65, 70, 75, 79, 80, 79};
    float coherentScores[64] = {11.083, 10.875, 10.968, 9.821, 11.629, 11.02, 10.384, 10.082,
                                11.957, 10.204, 9.985, 11.74, 10.15, 11.06, 11.58, 10.297,
                                9.887, 10.974, 11.982, 11.108, 9.854, 10.025, 10.336, 9.683,
                                9.959, 10.344, 11.187, 11.327, 10.183, 11.947, 10.66, 11.158,
                                11.632, 9.334, 10.509, 11.145, 10.484, 9.205, 9.49, 10.428,
                                11.533, 10.964, 11.982, 11.204, 11.223, 11.302, 11.874, 11.329,
                                10.85, 11.942, 11.818, 9.922, 10.389, 10.02, 11.643, 10.299,
                                9.174, 11.97, 10.794, 11.291, 9.466, 11.913, 11.465, 11.789};

    int midcoherentBPM[64] = {65, 70, 68, 75, 82, 78, 70, 75, 79, 80, 79, 75, 60, 90, 95, 50, 100, 68, 70, 65, 61, 60, 61, 65, 72, 80, 70, 80, 72, 65, 70, 75, 79, 80, 79, 75, 90, 100, 68, 75, 95, 62, 70, 65, 61, 60, 61, 65, 78, 85, 70, 80, 72, 65, 70, 75, 79, 80, 79, 75, 90, 100, 68, 75};
    float midcoherentScores[64] = {0.826, 0.792, 0.598, 0.771, 0.522, 0.769, 11.083, 10.875, 10.968, 9.821, 11.629, 11.02, 0.614, 0.886, 0.526, 0.537, 0.519, 0.722, 10.384, 10.082, 11.957, 10.204, 9.985, 11.74, 0.701, 0.705, 0.614, 0.807, 0.753, 0.571, 10.15, 11.06, 11.58, 10.297, 9.887, 10.974, 0.96, 0.524, 0.853, 0.968, 0.58, 0.534, 11.982, 11.108, 9.854, 10.025, 10.336, 9.683, 0.912, 0.67, 0.679, 0.557, 0.783, 0.684, 9.959, 10.344, 11.187, 11.327, 10.183, 11.947, 0.826, 0.792, 0.598, 0.771};

    int incoherentBPM[64] = {65, 70, 68, 75, 82, 78,   60, 90, 95, 50, 100, 68,   72, 80, 70, 80, 72, 65,   90, 100, 68, 75, 95, 62,   78, 85, 70, 80, 72, 65,   90, 100, 68, 75, 95, 65, 70, 68, 75, 82, 78,   60, 90, 95, 50, 100, 68,   72, 80, 70, 80, 72, 65,   90, 100, 68, 75, 95, 62,   78, 85, 70, 80, 72};
    float incoherentScores[64] = {0.826, 0.792, 0.598, 0.771, 0.522, 0.769, 0.614, 0.886, 0.526, 0.537,
                                  0.519, 0.722, 0.701, 0.705, 0.614, 0.807, 0.753, 0.571, 0.96,  0.524,
                                  0.853, 0.968, 0.58,  0.534, 0.912, 0.67,  0.679, 0.557, 0.783, 0.684,
                                  0.833, 0.786, 0.54,  0.622, 0.685, 0.939, 0.666, 0.881, 0.814, 0.92,
                                  0.726, 0.677, 0.927, 0.902, 0.732, 0.829, 0.693, 0.887, 0.728, 0.905,
                                  0.764, 0.643, 0.888, 0.966, 0.657, 0.818, 0.521, 0.838, 0.65,  0.98,
                                  0.707, 0.56,  0.656, 0.722};

};

#endif // HEARTMEASURINGELECTRODES_H
